"4-print_square" Module Test Documentation
==========================================
Function: '4-print_square.print_square()'
Prototype: 'def print_square(size)'
Usage: prints a square with the character '#' according to 'size'

import '4-print_square.print_square()'
======================================
	>>> print_square = __import__('4-print_square').print_square

Test Cases
===========
Valid Values
============
integers only for 'size':
-------------------------
	>>> print_square(4)
	####
	####
	####
	####
	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	>>> print_square(1)
	#

Invalid Values
==============
No Strings
-----------
	>>> print_square("a")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

No floats
----------
	>>> print_square(2.5)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

'size' > 0
-----------
	>>> print_square(-1)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

